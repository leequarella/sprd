%tabset
  %tab{"heading" => "Skaters"}
    .skatersController{'ng-controller' => 'skatersController'}
      .list
        .field_headers
          .field
            %div{'ng-click' => "predicate = 'derby_name.current'; reverse=!reverse"}
              Derby Name
            %input{placeholder:'Derby Name', "ng-model" => "derby_name_search",
            "ng-change" => "search('derby_name', derby_name_search)"}
          .field
            %div{'ng-click' => "predicate = 'first_name.current'; reverse=!reverse"}
              First Name
            %input{placeholder:'First Name', "ng-model" => "first_name_search",
            "ng-change" => "search('first_name', first_name_search)"}
          .field
            %div{'ng-click' => "predicate = 'last_name.current'; reverse=!reverse"}
              Last Name
            %input{placeholder:'Last Name', "ng-model" => "last_name_search",
            "ng-change" => "search('last_name', last_name_search)"}
          .field
            %div{'ng-click' => "predicate = 'email.current'; reverse=!reverse"}
              Email
            %input{placeholder:'Email', "ng-model" => "email_search",
            "ng-change" => "search('email', email_search)"}
        %ul
          %li.item.skater{'ng-repeat' => "skater in skatersDisplayed | orderBy:predicate:reverse",
          'ng-click' => 'setCurrentSkater(skater)'}
            .field
              {{skater.derby_name.current}}
            .field
              {{skater.first_name.current}}
            .field
              {{skater.last_name.current}}
            .field
              {{skater.email.current}}

      .currentSkater
        .field
          .label.label-default First Name
          %input{'ng-model' => 'currentSkater.first_name.current', placeholder: 'First Name'}
        .field
          .label.label-default Last Name
          %input{'ng-model' => 'currentSkater.last_name.current', placeholder: 'Last Name'}
        .field
          .label.label-default Derby Name
          %input{'ng-model' => 'currentSkater.derby_name.current', placeholder: 'Derby Name'}
        .field
          .label.label-default Email
          %input{'ng-model' => 'currentSkater.email.current', placeholder: 'Email'}
        .field
          .label.label-default Vacation Days
          %input{'ng-model' => 'currentSkater.vacation_days.current', placeholder: 'Vacation Days'}
        .actions
          .btn.btn-primary{'ng-show' => 'currentSkater', 'ng-click' => 'saveCurrentSkater()'} Save
          .btn.btn-warning{'ng-show' => 'currentSkater.persisted()', 'ng-click' => 'newSkater()'} New Skater
          .btn.btn-danger{'ng-show' => 'currentSkater.persisted()',
            'ng-click' => 'deleteCurrentSkater()'} Delete
  %tab{"heading" => "Practices"}
    .practicesController{'ng-controller' => "practicesController"}
      %div{'ng-hide' => 'displayPracticeSkaters'}
        .list.practices
          .field_headers
            .field
              %div{'ng-click' => "predicate = 'date'; reverse=!reverse"}
                Date

          %ul
            %li.item.practice{'ng-repeat' => "practice in practices | orderBy:predicate:reverse",
            'ng-click' => 'setCurrentPractice(practice)'}
              .field
                {{practice.date | date: 'EEE MMM d, yyyy'}}
        .currentPractice
          .row
            %div{:class=>"col-md-6"}
              %p{:class=>"input-group"}
                %input{:type=>"text", :class=>"form-control", "datepicker-popup"=>"{{format}}",
                "ng-model"=>"currentPractice.date", "is-open"=>"opened", "min-date"=>"minDate", "max-date"=>"'2015-06-22'",
                "datepicker-options"=>"dateOptions", "date-disabled"=>"disabled(date, mode)", "ng-required"=>"true", "close-text"=>"Close" }
                  %span{:class=>"input-group-btn"}
                    %button{:type=>"button", :class=>"btn btn-default", "ng-click"=>"open($event)"}
                      %i.glyphicon.glyphicon-calendar
          .actions
            .btn.btn-primary{'ng-show' => 'currentPractice.date',
              'ng-click' => 'saveCurrentPractice()'} Save
            .btn.btn-info{'ng-show' => 'currentPractice.id',
              'ng-click' => 'showSkaters()'} Skaters
            .btn.btn-danger{'ng-show' => 'currentPractice.id',
              'ng-click' => 'deleteCurrentPractice()'} Delete
            .btn.btn-warning{'ng-show' => 'currentPractice.id', 'ng-click' => 'newPractice()'} New Practice

      .practiceSkaters{'ng-show' => 'displayPracticeSkaters'}
        %h4 Skaters for {{currentPractice.date | date: 'MMM d, yyyy'}}
        .list
          .field_headers
            .field.derby_name
              %div{'ng-click' => "predicate = 'derby_name'; reverse=!reverse"}
                Derby Name
            .field
              Attended
            .field
              Injured
            .field
              Vacation
            .field
              Partial
            .field
              Absent

          %ul
            %li.item.skater{'ng-repeat' => "skater in skaters | orderBy:predicate:reverse",
            'ng-click' => 'setCurrentSkater(skater)'}
              .field.derby_name
                .span{'ng-show' => 'skater.derby_name'}
                  {{skater.derby_name}}
                .span{'ng-hide' => 'skater.derby_name'}
                  {{skater.first_name}}
                  {{skater.last_name}}
              .field
                %input{type: 'radio', 'ng-model' => 'skater.status.status',
                'ng-change' => "saveStatus(skater)",
                value: 'attended'}
              .field
                %input{type: 'radio', 'ng-model' => 'skater.status.status',
                'ng-change' => "saveStatus(skater)",
                value: 'injured'}
              .field
                %input{type: 'radio', 'ng-model' => 'skater.status.status',
                'ng-change' => "saveStatus(skater)",
                value: 'vacation'}
              .field
                %input{type: 'radio', 'ng-model' => 'skater.status.status',
                'ng-change' => "saveStatus(skater)",
                value: 'partial'}
              .field
                %input{type: 'radio', 'ng-model' => 'skater.status.status',
                'ng-change' => "saveStatus(skater)",
                value: 'absent'}

        .btn.btn-info{'ng-click' => 'hideSkaters()'} Hide
